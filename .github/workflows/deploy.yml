name: Deploy to GitHub Pages

on:
  push:
    branches: [ main, master ]
  workflow_dispatch: # 允许手动触发

# 设置 GITHUB_TOKEN 的权限
permissions:
  contents: read
  pages: write
  id-token: write

# 只允许一个并发部署
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # 构建任务
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          
      - name: Cache Rust dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          
      - name: Setup production config
        run: |
          # Check if site.prod.toml exists, otherwise create default
          if [ -f site.prod.toml ]; then
            echo "Using existing site.prod.toml"
          else
            echo "Creating default production config"
            cat > site.prod.toml << EOL
          title = "My IPFS Blog"
          description = "A decentralized blog powered by IPFS"
          author = "${{ github.repository_owner }}"
          base_url = "https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}"
          base_path = "/${{ github.event.repository.name }}"
          ipfs_gateway = "https://ipfs.io/ipfs/"
          posts_per_page = 10
          enable_rss = true
          theme = "default"
          EOL
          fi
          
          # Update base_url and base_path in production config to match GitHub Pages
          sed -i "s|base_url = .*|base_url = \"https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}\"|" site.prod.toml
          sed -i "s|base_path = .*|base_path = \"/${{ github.event.repository.name }}\"|" site.prod.toml
          
      - name: Build project
        run: cargo build --release
        
      - name: Generate static site
        run: |
          # 使用生产配置生成静态网站
          cargo run -- generate --config site.prod.toml
          
      - name: Add .nojekyll
        run: touch public/.nojekyll
        
      - name: Setup Pages
        uses: actions/configure-pages@v4
        
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./public

  # 部署任务
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4